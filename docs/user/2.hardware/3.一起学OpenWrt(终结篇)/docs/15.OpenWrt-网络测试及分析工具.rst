15.OpenWrt-网络测试及分析工具
=====================================

netcat
-----------------------------

netcat是一款强大的网络调试工具,主要用于TCP/UDP连接和监听。

在OpenWrt系统中通过makemenuconfig,选择NetWork=>netcat将netcat编译到系统。


netcat最简单的使用方法是作为TCP客户/服务器模型的服务器来使用,它能够监听
任意指定的端口,并将客户端的请求内容输出到标准输出(即屏幕)中,还可以将输入发
送到客户端。命令如下:
netcat-l8080
现在netcat将在8080端口监听来接受客户端的连接。我们在另外一个窗口来启动客
户端打开连接:
netcat192.168.1.18080


这将建立和netcat服务器的TCP连接,服务器的IP为127.0.0.1,端口为8080,这时
你从命令行终端中输入的任何内容都会被发送到指定的目的主机(127.0.0.1)上,任何通
过连接返回来的信息都被输出到标准输出上。这个连接会一直持续下去,至到连接两端的
程序关闭连接。其实netcat本身进行网络传输时并不关心自己是以“客户端”模式还是

“服务器”模式运行,因为不管是哪种模式它都会来回运送全部数据。区别在于服务器模
式需要首先启动,等待客户机的连接。主要支持功能如下:
- 支持客户端和服务器。
- 支持连出和连入,TCP和UDP以及任意源和目的端口。
- 内建端口扫描功能,带有随机数发生器。
- 支持设定tos等。
注意:有两个版本的netcat工具,功能有少许差异。OpenWrt使用的是GNU/netcat0.7.1
对应ubuntu下的nc.traditional版。另外一个是OpenBSD/netcat,没有最重要远程执行命
令的“-e”选项。

(1)作为客户端。这是最简单的使用方式,例如输入“ncwww.baidu.com80”在提示
内容输入以下内容,然后再输入两个回车,百度即会对请求做出响应。百度的响应码为302,
表示这里没有内容,暂时转移到别处了。如示例15-1所示。
示例15-1:
#>ncwww.baidu.com80
GET/HTTP/1.1
HTTP/1.1302MovedTemporarily
Date:Tue,19Jan201612:06:41GMT
Content-Type:text/html
Content-Length:215
Connection:Keep-Alive
Location:http://www.baidu.com/search/error.html

Server:BWS/1.1
X-UA-Compatible:IE=Edge,chrome=1
BDPAGETYPE:3
Set-Cookie:BDSVRTM=0;path=/
<html>
<head><title>302Found</title></head>
<bodybgcolor="white">
<center><h1>302Found</h1></center>
<hr><center>pr-nginx_1-0-258_BRANCHBranch
Time:MonJan1821:04:41CST2016</center>
</body>
</html>


(2)作为服务器。如示例15-2所示,启动netcat命令netcat-l-p8080,这里“-l”参
数指明netcat处于监听模式,“-p”指定源端口号。假设这台主机IP地址为192.168.6.1,
然后从客户端的火狐浏览器输入http://192.168.6.1:8080。这样浏览器将会将HTTP请求发
往netcat所监听的8080端口,netcat会收到浏览器的请求,并全部输出到屏幕上。在防
火墙测试时,可以在服务器启动任意端口来测试防火墙是否生效。
示例15-2:
#>netcat–l–p8080
GET/HTTP/1.1
Host:192.168.6.1:8080
User-Agent:Mozilla/5.0(X11;Ubuntu;Linuxi686;rv:35.0)Gecko/20100101
Firefox/35.0
Accept:text/html,application/xhtml+xml,application/xml;q=0.9,*/
*;q=0.8
Accept-Language:en-US,en;q=0.5
Accept-Encoding:gzip,deflate
Connection:keep-alive

(3)使用netcat进行文件传输。如果研发设备机器上没有ftp/scp等文件传输工具,
那如何将设备中的日志文件复制出来,以及可执行程序复制进去？可以使用netcat来传
输文件,如示例15-3所示,研发机器A启动服务器进程,并将aa.pcap文件传递到NC标
15.1netcat281
准输入中,另外的机器B执行客户端命令连接服务器,并将命令的标准输出写到文件
bb.pcap中,执行完成之后将自动退出进程。传输完成后使用MD5sum工具计算传输文件
的MD5码是否一致,如果一致表示传送成功。
示例15-3:
#研发测试机Alice,IP192.168.6.10
#>nc-l-p8899<aa.pcap
#另外一机器Bob执行命令
#>nc192.168.6.108899>bb.pcap

(4)使用netcat来进行端口扫描。端口扫描是探测主机服务的流行方法,经常使用的
软件是nmap。netcat也支持端口扫描。在netcat的命令行中,使用“-z”来指定端口扫
描。首先指定选项参数,接着是主机或IP地址,最后是服务器端口。端口可以是一些服
务名、端口号或者是一个端口范围(例如N-M)。如示例15-4所示,对本机端口进行扫描,
发现打开的端口有3个,分别为22端口启动SSH登录协议、53端口启动DNS代理服务、
80端口启动HTTP服务。
示例15-4:
#>nc-v-z-r-i1127.0.0.120-100
localhost[127.0.0.1]22open
localhost[127.0.0.1]80(www)open
localhost[127.0.0.1]53(domain)open
以上命令用来扫描目标主机的20~100(两端包含)端口,“-v”显示详细信息,如不
指定将不会在屏幕输出中报告打开的端口;“-z”表示仅连接不发送任何数据;“-i”用以
指明连接多个端口时,两个端口建立连接的时间间隔。通常情况下,扫描按从低到高的顺
序依次扫描指定的端口,使用“-r”参数可以让netcat在指定的端口范围内无序地扫描端
口,这样可以防止某些防火墙发现端口扫描。
UDP报文传输时不创建连接,因此netcat不能判断UDP服务扫描是否成功,也就是
说它不能用于UDP端口扫描。

(5)使用netcat来进行UDP报文传输。例如开源的SIP服务器项目OpenSIPS使用
netcat进行模拟客户端进行测试。在它的测试脚本11.sh中,包含有如示例15-5所示的命

令脚本。
示例15-5:
#registerauser
catregister.sip|nc-q1-ulocalhost5060>/dev/null
该命令将当前目录的文本文件register.sip文件输出,并使用管道符号“|”将内容作为
NC的标准输入。“-q1”表示发送完成后等待1秒后退出。“-u”表示指定使用UDP协议
来发送报文。localhost表示目标地址为127.0.0.1,5060为OpenSIPS服务器使用的UDP监
听端口,最后将标准输出重定向到“/dev/null”中。整个命令就是向服务器发起SIP注册
请求。

(6)使用netcat来提供网络登录服务。netcat的强大之处,是可以启动程序来提供
远程登录的服务,这样可以提供任何远程操控服务。其主要原理为将远程输入内容通过管
道定向到shell进程,然后shell进程的输出发送到远程机器上。如示例15-6所示,在TCP
端口1234处监听,客户端即可通过netcat登录到服务器上。
示例15-6:
#路由器执行命令:
#>nc–l–p1234–e/bin/sh
#客户端主机执行命令,这样将连接的服务器,这时可以执行服务器任何命令。
#>nc192.168.6.11234
以下为主要选项:
- -l:监听模式,通过该选项netcat将在自己的端口处监听。netcat以服务器模式
运行,任何客户端软件均可连接到该服务器上。需要使用“-p”指定绑定端口。
- -u:默认使用TCP,使用该选项将使用UDP来通信。
- -p:指定通信源端口号。OpenBSD版作为服务器不需要使用“-p”指定。作为客
户端可以不指定源端口,但一些特殊场景,例如在测试防火墙对源端口的处理时,
经常会指定源端口。
- -ssource_ip_address:指定用于发送报文的源IP地址,在主机有多个接口地址时
使用。

- -e,--exec=PROGRAM:在连接成功后执行程序。
- -z:指定NC扫描打开的服务,但并不发送任何数据。必须指定服务器地址和端
口号或端口号范围,扫描的结果以程序返回值形式查看,如果需要扫描的详细信
息需要增加“-v”选项。
- -qseconds:在输入结束后等待指定的时间后退出,如果为负值则永远不退出。
- -Ttos:设置报文的tos标识。
更多命令选项请参考netcat用户手册。


tcpdump
-------------------------------------

在进行网络应用程序开发时,如果多人合作开大型软件包括服务器端和客户端软件,
并运行在特定网络上,经常会遇到一些网络上的问题,这些可能是服务器、客户端或者真
正的网络线路问题,经常会相互争论到底是哪一部分出了问题。程序员通常会自信地怀疑
对方的功能出了问题。
例如我曾经遇到的一个问题是防火墙上报访问URL地址到日志服务器,经常会有少
量报文丢失情况。这时抓包软件TcpDump就派上了用场。TcpDump简单来说就是输出网
络上的数据报文。可以根据使用者的选择来对网络上的数据报文进行截获并进行分析。可
以根据网络协议、物理接口、IP地址和端口号等各种条件进行过滤,还可以对捕获报文大
小进行控制,等等。

15.2.1抓取报文
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

最简单的开始捕获报文的方法是直接使用TcpDump并指定捕获的网卡名称即可。
tcpdump-ieth0
可以使用组合键Ctrl+C来结束运行中的捕获程序。另外如果设置了触发停止的条件,
捕获达到条件时会自动停止,例如设置到达指定数量的数据包来停止捕获。TcpDump的
可视化输出功能有限,通常是捕获报文并保存下来,然后使用图形用户界面软件wireshark

来分析。使用“-w”选项来指定文件名即可将报文保存下来。例如以下命令:
tcpdump-ieth0-s1500-waaa0326.cap
这个命令将捕获网卡eth0端口的所有报文,报文最大长度为1500字节,并保存为
aaa0326.cap文件。
TcpDump有很多参数来控制在哪里捕获、如何捕获,以及捕获文件如何保存处理等选
项,表15-1列出了TcpDump的常用选项。
表15-1TcpDump的常用选项
选项含义
-i<interface>指定监听的物理网卡接口
-s指定每个报文中截取的数据长度
-w<filename>把原始报文保存到文件中
-c当收到指定报文个数后退出,可当作软件执行结束的条件
-n不要将IP地址和端口号进行转换,进行转换会耗费CPU时间
-G<rotate_seconds>每隔指定的时间,将捕获的报文循环保存为新文件
-D输出TcpDump可以捕获的接口列表,包含接口编号和接口名称
-v
当解析和打印时,输出详细的信息,例如报文的生存时间TTL、ID等IP报文
选项
最常用的选项是“-i”,它被用来指定监听网卡物理接口,因为现代计算机通常有多个
接口设备,如果不指定接口,TcpDump将在系统的所有接口列表中寻找编号最小的、已经
配置为启动的接口(回环接口除外)。接口可以指定为“any”,表示捕获所有接口的报文。
捕获所有接口设备的报文时不能捕获到混杂模式的报文。例如路由器通常至少有两个接
口,eth0连接互联网,eth1连接局域网,如果你想捕获到达互联网的数据,你可以指定eth0
接口。
常用的选项还有“-s”,用于指定从每个报文中截取指定字节的数据,而不是缺省
的68字节。如果你仅仅对报头感兴趣,就可以不使用该选项,指定为0说明不限制报
文长度,而是捕获整个报文。一般以太网接口的MTU值为1500,因此指定长度为1500
即可。
通常我们不在命令行进行分析,因为其输出格式有限,我们将抓包保存下来使用
wireshark来分析,这时就用到“-w”选项,直接将原始报文保存到文件中,如果文件参数

为“-”,就写到标准输出中。
每隔指定的时间将捕获的报文循环保存为新文件,这个需要使用“-G”选项。这一参
数需要和“-w”参数配合使用,并指定时间格式才能循环保存为文件,否则将覆盖之前捕
获的文件。常用的时间格式有以下几种。
- %d:每月中的第几天,十进制数字从01到31。
- %H:表示当前的小时时间,十进制数字从00到23。
- %M:表示当前的分钟时间,十进制数字从00到59。
- %S:表示当前的秒时间,十进制的00到60。
“-p”禁止本命令把接口修改为混杂模式。这样将仅抓取和本机通信的报文。注意接
口有可能因其他原因而处于混杂模式。
“-r”从文件中读取报文(文件是由“-w”选项抓包创建的)。
例1tcpdump-ieth0-s1500-G60-wzhang%H%M%S.pcap
这个命令指定抓取eth0接口的报文,每一个报文长度限制在1500字节以内。指定每
间隔60秒时间就保存一个文件。文件名称格式为zhang开头,紧接着是抓取报文的开始
时间时分秒,这样可以保存下来便于分析。
例2tcpdump-ieth0-n–vv-c500
这个命令抓取eth0接口的全部报文并输出到屏幕中,不进行地址到域名的转换,并在
抓取报文到达500个之后退出。通常会在命令行中加上“-n”选项,这样将减少TcpDump
的域名查询的输出对分析的干扰。

15.2.2匹配规则
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在抓包的过程中,如果不指定匹配规则,网络流量比较大时经常有一些无关的报
文也被抓取下来,这样报文占用空间比较大,在智能路由器这样的嵌入式平台存储空
间经常不足,因此需要能仅抓取指定规则条件的报文。TcpDump支持根据匹配规则来
抓取报文。这些匹配规则就是一些组合起来的表达式,只有符合表达式要求的报文才
会被抓取到。

表达式由一个或多个基本元素加上连接符组成,这些基本元素也称原语,是指不
可分割的最小单元。基本元素由一个ID和一个或多个修饰符组成,有3种不同类型的
修饰符。
第1种是类型修饰符,共4个类型修饰符,分别为host、net、port和portrange。host
修饰符用于指定需要捕获报文的主机或IP地址。net修饰符用于指定需要捕获报文的子
网。port和portrange这两个修饰符则分别用于指定端口和端口范围,这两个修饰符是指
传输层协议TCP和UDP的端口号。
第2种是传输方向修饰符,包括src和dst。如果没有指明方向则任何方向均匹配。
例如dst8.8.8.8表示匹配目的地址为8.8.8.8。如果你想匹配离开指定机器的报文,可以使
用src限定符,例如src192.168.6.100,如果不指定类型,则是指host类型。传输方向修
饰符不仅可以修饰地址,也可以用来修饰传输端口。下面例子是仅捕获目标端口为80
的报文。
tcpdump-ieth0'dstport80'–v
如果我们为服务器,有很多用户访问,那我们可以限定仅捕获指定源IP的报文。例
如我们是一个VOIP服务器,我们可以使用以下命令抓取报文:
tcpdump-ieth0'port5060andsrc192.168.6.100'-v
第3种是协议修饰符,可以基于特定协议来进行过滤,可以是IP、ARP、RARP、ICMP、
TCP和UDP等协议类型,例如tcpport21、udpport5060等。
另外这些原语可以使用and、or和not来进行集合运算组合。集合运算符含义如下。
- and:也可以写为“&&”,取两个集合的交集。
- or:也可以写为“||”,取两个集合的并集。
- not:也可以写为“!”,所修饰的集合取补集。
所有的报文集合是全集,可以进行交、并和补集运算。在多个层次的集合运算时,可
以使用小括号来分隔其集合运算符的结合关系。
例如“hostbjbook.netandporthttp”,表示满足两者的交集,即符合主机bibook.net的
流量并且端口为80的报文。这些所有关键字可以组合起来构成强大的组合条件来满足各
种匹配规则的需要,表15-2列出了一些常用的表达式。

表15-2TcpDump报文过滤表达式
表达式含义
hostbjbook.net捕获和主机bjbook.net交互的数据包,包含到达和来源的报文
net191.0.0.0/24捕获指定网段191.0.0.0/24范围内的数据包
port20
捕获指定端口20的数据包,指定TCP或UDP协议端口匹配,端口号
可以是数字也可以是一个名称,这个名称在/etc/services文件中和端口
号数字相对应,例如porthttp则匹配80端口的所有流量,包括TCP
和UDP80端口的流量
portrange8000-8080捕获端口范围8000~8080的数据包
dstport80捕获目的端口为80的报文,包含UDP和TCP报文,dst指明报文的
方向,也可以修饰主机名和IP地址
src192.168.6.100捕获源IP为192.168.6.100的报文,src也可以修饰传输层端口号
ipmulticastIPv4组播报文,即目标地址为组播地址的报文
arp只捕获ARP协议报文,不包含IP报文
ip捕获IP协议报文,不包含ARP等协议报文
tcp指定TCP协议
udp指定UDP协议
udpport53指定UDP协议并且端口为53,即是DNS协议的报文
port5060orport53指定端口为5060或端口为53的报文,这在使用IP电话时经常用到
nothostbjbook.net所有非主机bjbook.net的报文
port5060and(host192.168.6.
100or192.168.6.102)
端口5060的报文,并且满足IP地址是192.168.6.100或192.168.6.102,
使用括号来改变结合的优先级
例1tcpdumpudpandport53-v
只抓取UDP端口53的报文,即只捕获DNS协议报文,然后输出到标准输出终端中。
例2tcpdump-ieth0-s0-wzhang.pcaphost10.0.2.15
在网卡eth0上抓取报文,报文的IP地址是10.0.2.15,并且不限制报文长度,将报文
的全部内容保存下来到zhang.pcap这个文件中。

15.2.3使用举例
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

通常我们在路由器上使用TcpDump抓取报文,将报文传输下来后使用图形软件
wireshark来分析报文。在路由器上使用需要安装TcpDump软件,我们使用以下命令来安装:

opkg update
opkg install tcpdump
例如我曾经碰到一个问题是,在系统启动时,ARP协议来请求目标IP地址的MAC地址,但这个IP地址并非和本地机器同网段,这在网关机器带有ARP代理情况下工作正常,但是如果下一跳路由器没有ARP代理,就会因为没有目标IP的MAC响应而通信失败。我们在启动时就可以仅抓取ARP协议、TFTP协议、DNS协议及ICMP协议。tcpdump-ieth0-waaa.pcapport59orport53orport80orarporicmp该命令将抓取TFTP协议、DNS协议、HTTP协议、ARP协议和ICMP协议的报文。