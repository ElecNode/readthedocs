2.OpenWrt开发环境部署
===========================================================

从这一章就开始进入实操环节,本章注意是OpenWrt开发环境的搭建,和其他Linux系统的开发流程基本一致。


想要开发OpenWrt系统开发就必须要先搭建OpenWrt的开发环境。由于运行OpenWrt往往是嵌入式环境中,开发板的速度、容量等达不到编译OpenWrt源码的能力,这时候就需要安装一个Ubuntu系统,前面说过Ubuntu也是Linux系统的一个发行版,做嵌入式linux开发一般都使用ubuntu作为开发系统。在一些公司会有专门的编译服务器,往往安装了Ubuntu系统,本地的电脑使用SSH等远程连接工具即可连接到服务器,然后开展开发工作。

个人往往不具备这样的条件,手上只有一台安装Windows或其他系统的电脑,这时候就可以使用虚拟机软件,帮助我们在windows系统上在构建一个虚拟的ubuntu系统,可以通过vmware或者VirtualBox虚拟机软件实现,本书推荐使用vmware虚拟机软件,在虚拟机中安装Ubuntu系统和在物理机器上安装ubuntude方法基本一致,下面就开始安装吧。


2.1.使用vmware安装ubuntu虚拟机系统
-----------------------------------------------------------

:doc:`/linux/linux_basics/docs/2.ubuntu虚拟机安装`

2.2.搭建OpenWrt开发环境
-----------------------------------------------------------

Ubuntu系统采用APT(Advanced Packaging Tool)来管理软件包安装、更新、升级及删除等。APT相当于Ubuntu系统的 ``应用商店``,可以通过apt命令下载各种Ubuntu系统软件.APT系统的配置文件为/etc/apt/sources.list和/etc/apt/sources.list.d目录,前面已经将软件下载源换位国内的清华tuna镜像源,tuna镜像源每5分钟与Ubuntu的软件源同步一次数据,国内用户使用镜像源下载软件速度更快也能保证软件是最新的,当然也可以使用国内一些其他高校或者公司搭建的Ubuntu软件镜像源服务器.

.. code-block:: shell
   :caption: 安装必要软件
   :linenos:

    sudo apt-get -y install build-essential asciidoc qemu-utils binutils bzip2 gawk gettext git libncurses5-dev libz-dev patch python3 python2.7 unzip zlib1g-dev lib32gcc1 libc6-dev-i386 subversion flex uglifyjs git-core gcc-multilib p7zip p7zip-full msmtp libssl-dev texinfo libglib2.0-dev xmlto qemu-utils upx libelf-dev autoconf automake libtool autopoint device-tree-compiler g++-multilib antlr3 gperf wget curl swig rsync libelf-dev python3-distutils

2.3.下载OpenWrt源代码
-----------------------------------------------------------

OpenWrt的源码是托管在github,使用git即可拷贝一份OPenWrt的源码.

`OpenWrt官网 <https://openwrt.org/>`_

.. code-block:: shell
   :caption: 克隆OpenWrt源码
   :linenos:

    git clone https://github.com/openwrt/openwrt.git

几个重要的目录:
(1)scripts:存放了一些脚本,使用了bash, Python、perl等多种脚本语言。编译过程中,用于第三方软件包管理的feeds文件也是在这个目录当中。在编译过程中,使用到的脚本也统一放在这个目录中;
(2)tools:编译时,主机需要使用一些工具软件,tools里包含了获取和编译这些工具的命令。软件包里面有Makefile文件,有的还包含了patch。每个Makefile当中都有一句$(eval(call HostBuild))美元美元,这表明编译这个工具是为了在主机上使用的;
(3)config:存放着整个系统的配置文件;
(4)docs:包含了整个宿主机的文件源码的介绍,里面还有Makefile为目标系统生成文档。使用- c文档可以为目标系统生成文档。
(5)toolchain:嵌入式的工程应该都知道交叉编译工具链,这个文件中存放的就是交叉编译工具链的软件包。包括binutils, gcc, libc等等;
(6)target:openwrt的源码可以编译出各个平台适用的二进制文件,各平台在这个目录里定义了固件和内核的编译过程;
(7)package:存放了openwrt系统中适用的软件包,包含针对各个软件包的Makefile. openwrt定义了一套Makefile模板,各软件参照这个模板定义了自己的信息,如软件包的版本,下载地址,编译方式,安装地址等。在二次开发过程中,这个文件夹我们会经常打交道。事实上,通过./scripts/feeds/ update -a和./scripts/feeds/ install -a的软件包也会存放在这个目录中;
(8)包括:openwrt的Makefile都存放在这里。文件名为楼上。这里的文件上是在Makefile里被包括的,类似于库文件。这些文件定义了编译过程;
(9)文件:主要目录就是前面提及的8个,剩下的是单个文件,具体如下:
a,Makefile:在顶层目录执行让命令的入口文件。
b,rules.mk:定义了Makefile中使用的一些通用变量和函数。
c,Config.in:在includetoplevel.mk可中我们可以看的到,这是和make menuconfig相关联的文件。
d,feeds.conf.default:是下载一些第三方软件包时所使用的地址。
e,LICENSE & README:即软件许可证和软件基本说明。其中README描述了编译软件的基本过程和依赖文件。

2.4.编译OpenWrt源代码
-----------------------------------------------------------

第1步首先更新和安装所有可选的软件包。
./scripts/feeds update更新最新的包定义
./scripts/feeds install-a安装所有的包
feeds命令将安装扩展代码包编译选项。如果不运行该命令,在menuconfig配置时将没有选择这些扩展包的机会。

第2步进行编译配置。输入“makedefconfig”,在这里会检查所需的编译工具是否齐备,并生成默认的编译配置文件“.config”。

第3步,输入make命令就可以开始编译。编译时首先从Internet上下载软件模块代
码,因为OpenWrt仅有编译及配置指令,各种依赖的代码包在上游网站及代码仓库里面。
OpenWrt网站也有第三方的代码包镜像,在上游网站不可用时将使用OpenWrt自己的服
务器地址,下载地址为http://downloads.openwrt.org/sources/。根据下载速度和选择软件
包的数量多少,编译所占时间不同,大约需要3小时以上。

makeV=s可以输出编译过程中每一步的执行动作,出错后显示详细的错误信息。
make-j2使用2个线程进行并行编译,这样编译速度将大大加快。

$make-j2
make[1]world
make[2]tools/install
make[2]package/cleanup
make[3]-Ctools/patchcompile
make[3]-Ctools/sstripcompile
make[3]-Ctools/make-ext4fscompile
make[3]-Ctools/firmware-utilscompile
make[3]-Ctools/patch-imagecompile
make[3]-Ctools/flockcompile
make[3]-Ctools/sstripinstall
make[3]-Ctools/make-ext4fsinstall
make[3]-Ctools/firmware-utilsinstall
make[3]-Ctools/patch-imageinstall
make[3]-Ctools/flockinstall
make[3]-Ctools/patchinstall
make[3]-Ctools/sedcompile
make[3]-Ctools/m4compile
make[3]-Ctools/xzcompile
make[3]-Ctools/yaffs2compile
make[3]-Ctools/cmakecompile
make[3]-Ctools/sconscompile
make[3]-Ctools/lzmacompile
make[3]-Ctools/sedinstall
make[3]-Ctools/m4install
make[3]-Ctools/pkg-configcompile
make[3]-Ctools/xzinstall
make[3]-Ctools/mkimagecompile
make[3]-Ctools/yaffs2install
make[3]-Ctools/sconsinstall
make[3]-Ctools/lzmainstall
make[3]-Ctools/squashfs4compile
make[3]-Ctools/autoconfcompile
make[3]-Ctools/pkg-configinstall
make[3]-Ctools/mkimageinstall
make[3]-Ctools/squashfs4install
make[3]-Ctools/autoconfinstall
make[3]-Ctools/automakecompile
make[3]-Ctools/missing-macroscompile
make[3]-Ctools/automakeinstall
make[3]-Ctools/missing-macrosinstall
make[3]-Ctools/libtoolcompile
make[3]-Ctools/libtoolinstall
make[3]-Ctools/gmpcompile
make[3]-Ctools/libelfcompile
make[3]-Ctools/flexcompile
make[3]-Ctools/mklibscompile
make[3]-Ctools/e2fsprogscompile
make[3]-Ctools/mm-macroscompile
make[3]-Ctools/cmakeinstall
make[3]-Ctools/gengetoptcompile
make[3]-Ctools/patchelfcompile
make[3]-Ctools/gmpinstall
make[3]-Ctools/libelfinstall
make[3]-Ctools/flexinstall
make[3]-Ctools/mklibsinstall
make[3]-Ctools/e2fsprogsinstall
make[3]-Ctools/mm-macrosinstall
make[3]-Ctools/patchelfinstall
make[3]-Ctools/qemucompile
make[3]-Ctools/mpfrcompile
make[3]-Ctools/bisoncompile
make[3]-Ctools/mtd-utilscompile
make[3]-Ctools/gengetoptinstall
make[3]-Ctools/qemuinstall
make[3]-Ctools/mpfrinstall
make[3]-Ctools/mtd-utilsinstall
make[3]-Ctools/mpccompile
make[3]-Ctools/mpcinstall
make[3]-Ctools/bisoninstall
make[3]-Ctools/findutilscompile
make[3]-Ctools/bccompile
make[3]-Ctools/bcinstall
make[3]-Ctools/findutilsinstall
make[3]-Ctools/quiltcompile
make[3]-Ctools/padjffs2compile
make[3]-Ctools/padjffs2install
make[3]-Ctools/quiltinstall
make[2]toolchain/install
make[3]-Ctoolchain/gdbprepare
make[3]-Ctoolchain/binutilsprepare
make[3]-Ctoolchain/gcc/minimalprepare
make[3]-Ctoolchain/kernel-headersprepare
make[3]-Ctoolchain/uClibc/headersprepare
make[3]-Ctoolchain/gcc/initialprepare
make[3]-Ctoolchain/gdbcompile
make[3]-Ctoolchain/binutilscompile
make[3]-Ctoolchain/kernel-headerscompile
make[3]-Ctoolchain/uClibcprepare
make[3]-Ctoolchain/gcc/finalprepare
make[3]-Ctoolchain/uClibc/utilsprepare
make[3]-Ctoolchain/binutilsinstall
make[3]-Ctoolchain/gcc/minimalcompile
make[3]-Ctoolchain/gdbinstall
make[3]-Ctoolchain/gcc/minimalinstall
make[3]-Ctoolchain/kernel-headersinstall
make[3]-Ctoolchain/uClibc/headerscompile
make[3]-Ctoolchain/uClibc/headersinstall
make[3]-Ctoolchain/gcc/initialcompile
make[3]-Ctoolchain/gcc/initialinstall
make[3]-Ctoolchain/uClibccompile
make[3]-Ctoolchain/uClibcinstall
make[3]-Ctoolchain/gcc/finalcompile
make[3]-Ctoolchain/gcc/finalinstall
make[3]-Ctoolchain/uClibc/utilscompile
make[3]-Ctoolchain/uClibc/utilsinstall
make[2]target/compile
make[3]-Ctarget/linuxcompile
make[2]package/compile
make[3]-Cpackage/system/opkghost-compile
make[3]-Cpackage/libs/toolchaincompile
make[3]-Cpackage/libs/ncurseshost-compile
make[3]-Cpackage/system/usignhost-compile
make[3]-Cpackage/boot/grub2host-compile
make[3]-Cpackage/firmware/linux-firmwarecompile
make[3]-Cpackage/network/services/dropbearcompile
make[3]-Cpackage/libs/libpcapcompile
make[3]-Cpackage/network/utils/linux-atmcompile
make[3]-Cpackage/network/utils/resolveipcompile
make[3]-Cpackage/libs/ocf-crypto-headerscompile
make[3]-Cpackage/utils/busyboxcompile
make[3]-Cpackage/utils/mkelfimagecompile
make[3]-Cpackage/libs/libnl-tinycompile
make[3]-Cpackage/libs/libjson-ccompile
make[3]-Cpackage/utils/luacompile
make[3]-Cpackage/libs/lzocompile
make[3]-Cpackage/libs/zlibcompile
make[3]-Cpackage/libs/ncursescompile
make[3]-Cpackage/kernel/linuxcompile
make[3]-Cpackage/libs/opensslcompile
make[3]-Cpackage/libs/libuboxcompile
make[3]-Cpackage/utils/util-linuxcompile
make[3]-Cpackage/utils/jsonfiltercompile
make[3]-Cpackage/system/usigncompile
make[3]-Cpackage/boot/grub2compile
make[3]-Cpackage/network/utils/iptablescompile
make[3]-Cpackage/network/ipv6/odhcp6ccompile
make[3]-Cpackage/network/services/dnsmasqcompile
make[3]-Cpackage/network/services/pppcompile
make[3]-Cpackage/system/mtdcompile
make[3]-Cpackage/system/opkgcompile
make[3]-Cpackage/system/ubuscompile
make[3]-Cpackage/system/ucicompile
make[3]-Cpackage/utils/ubi-utilscompile
make[3]-Cpackage/network/config/firewallcompile
make[3]-Cpackage/network/services/odhcpdcompile
make[3]-Cpackage/network/config/netifdcompile
make[3]-Cpackage/system/uboxcompile
make[3]-Cpackage/system/procdcompile
make[3]-Cpackage/system/fstoolscompile
make[3]-Cpackage/base-filescompile
make[2]package/install
make[3]package/preconfig
make[2]target/install
make[3]-Ctarget/linuxinstall
make[2]package/index


2.5.下载固件到开发板
-----------------------------------------------------------

