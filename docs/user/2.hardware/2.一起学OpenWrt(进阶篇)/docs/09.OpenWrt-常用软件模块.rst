09.OpenWrt-
===========================================================

9.1CWMP
-----------------------------------------------------------

9.1.1概述
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

CWMP(CPEWANManagementProtocol)是一个面向终端设备的网管技术规范。这个技术规范提供了对下一代网络中家庭网络设备进行管理配置的通用框架、消息规范、管理方法和数据模型。它由宽带(Broadband)论坛管理和发布,于2004年发布第一版,文件编号为TR-069。CWMP中定义了以下两种基本网络元素。
-ACS:自动配置服务器(AutoConfigurationServer),网络中的管理服务器。
-CPE:客户端设备(Customerpremisesequipment),网络中的被管理设备。
CWMP作为一个双向的SOAP/HTTP的协议,它定义了客户端设备和自动配置服务器之间的通信协议。它包括一个安全的自动配置和其他CPE管理功能控制整体框架。协议支持了不同的互联网接入设备,如调制解调器、路由器、机顶盒和VoIP电话等。标准TR-069协议的自动配置服务器对这些设备进行自动配置和管理。CWMP是一个基于文本的协议,在设备和自动配置服务器之间传输HTTP文本。在HTTP层面上CPE是客户端,ACS起到HTTP服务器的作用。这意味着控制配置数据的流动是客户端设备的职责。所有的通信和操作都在配置会话的范围内进行。会话是由设备从一个通知(Inform)

消息的传输开始的。ACS服务器在收到通知消息时,开始对CPE调用接口方法进行状态查询和配置。认证对于CPE来说是必不可少的,一般采用摘要认证算法来对CPE进行认证。大多数的配置和诊断是通过设置和检索设备参数的值来实现的。这些配置都是组织为一个定义良好的层次结构,包括常见或不太常见的所有设备模型。宽带论坛发布的数据模型标准有两种格式,XML包含每一个子元素的详细规范,还有包含人可读细节的PDF文件。TR181包含了大多数设备类型的数据模型定义,设备所支持的管理模型用设备节点Device.DeviceInfo.SupportedDataModel来表示。每一个定义的对象节点都需要标识出是可修改的还是只读的。这些是通过GetParameterNames方法来获取设备支持配置对象节点报告。设备不应允许标记为只读的任何参数的修改。TR181数据模型的规格和扩展清楚地标识了大多数设备参数的规格。参数的类型和含义在标准TR181中有详细定义。CWMP主要应用于电话、有线电视、宽带等家庭接入网络环境。在这些接入网络中,由于用户设备数量很多,并且用户分散,不容易进行设备的管理和维护。采用CWMP协议,可以实现ACS对CPE设备的远程集中管理,解决了CPE设备的管理维护问题,提高了网络的运维效率。

9.1.2方法和流程
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

设备的整个管理过程是建立在定义好的一组简单的操作方法上,每个方法都是原子操作。如果设备不能执行一个配置命令那就返回给ACS适当的错误值。设备不应当因为错误中止会话。常用支持的方法见表9-1。
表9-1TR069的主要交互方法
方法含义
SetParameterValues服务器用来修改CPE的参数
GetParameterValues用于服务器获取CPE的参数配置值。一次可以获取一个或多个参数
GetParameterNames用于服务器来发现客户端可以访问的配置参数
InformCPE调用服务器的Inform方法来建立和服务器之间的传输会话
AddObject用于服务器来针对多实例对象来创建新的实例
DeleteObject服务器删除客户端多实例中的一个实例为适应终端数量巨大并且地址不固定的特性,TR069定义的交互流程中,管理交互通

常都是由CPE发起的,由CPE来“请求”ACS进行管理(见图9-1)。当ACS希望启动对
CPE的管理时,协议定义了一个反向触发机制。CPE建立一个用于侦听的HTTP端口,这
个端口地址信息在CPE初始连接时上报给ACS,当ACS希望对CPE进行管理时,ACS向
该端口建立传输控制协议连接并发送空的POST请求报文,CPE收到该请求报文后随即启
动正向的HTTP/HTTPS连接,请求自动配置服务器的管理。交互流程如图9-1所示。
CPEACS
(1)请求TCP连接
(4)HTTP响应(Inform响应)
(2)双向认证
(3)HTTPRequest(Inform请求)
(5)HTTPpost请求(内容为空)
(6)HTTP响应(GetParameteValues请求)
(7)HTTPpost(GetParameterValues响应)
(8)HTTP响应(SetParameteValues请求)
(9)HTTPpost(SetParameterValues响应)
(10)HTTP响应(内容为空)
(11)关闭连接
图9-1TR069交互流程
(1)CPE和ACS建立TCP连接。
(2)SSL初始化进行双向认证。
(3)CPE发送Inform报文,开始建立CWMP连接。Inform报文使用Eventcode字段描述发送Inform报文的原因,通常为“0BOOTSTRAP”,表示CPE首次启动建立连接。
(4)如果CPE通过ACS的认证,ACS将返回Inform响应报文,连接建立完成。
(5)如果CPE没有别的请求,就会发送一个HTTPPost请求,内容为空,以满足HTTP报文请求/响应报文交互规则(CWMP是基于HTTP协议的,CWMP报文作为HTTP报文的数据部分封装在HTTP报文中)。
(6)ACS查询CPE上设置的轮询通知间隔的值等。
(7)CPE把自身的轮询通知间隔的值返回给ACS。
(8)ACS发现轮询通知间隔的值设置不符合服务器配置,于是发起设置请求,要求将CPE的轮询通知间隔的值设置为1800秒。
(9)设置成功后,CPE发送响应报文。
(10)ACS发送空报文通知CPE没有别的请求了。
(11)CPE关闭连接。

9.1.3如何配置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

OpenWrt通过freecwmp软件包来支持CWMP,但默认并不会对该软件包进行编译,
因此编译前需要使用feeds命令来查找和配置cwmp。
./scripts/feedssearchcwmp#查找cwmp所支持的软件包
./scripts/feedsinstallfreecwmp-curl#我们选择freecwmp-curl模块
Installingpackage'freecwmp'
Installingpackage'libfreecwmp'
Installingpackage'libmicroxml'
Installingpackage'shflags'
Installingpackage'curl'
Installingpackage'libzstream'
然后在makemenuconfig中就会有UTilities--->freecwmp-curl的选择项,输入M选择
并保存退出,然后进行编译。编译成功之后将所有的软件包放在服务器上,然后在
OpenWrt终端输入以下命令进行安装。
opkginstallfreecwmp-curl

9.2 SSH服务器
-----------------------------------------------------------

SSH(SecureShell)是专为远程登录会话和其他网络服务提供安全性的协议。OpenWrt
默认采用Dropbear软件来实现SSH协议。它是一个在小内存环境下非常高效的SSH服
务器和客户端。

9.2.1概述
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

Dropbear是一个开源软件包,是由马特·约翰逊撰写,并且和安全shell兼容的服务器和客户端。它是在低内存和处理器资源情况下对标准的OpenSSH的一个替代品,适合嵌入式操作系统。它是OpenWrt的一个核心组件。Dropbear实现了SSH协议V2版本。SSH协议是一种在不安全的网络环境中,通过加密和认证机制,实现安全的远程访问以及文件传输等业务的网络安全协议。它使用了第三方的加密算法,但嵌入到Dropbear代码中,终端的部分代码继承自OpenSSH软件。Dropbear在客户端和服务器都实现了完整的SSH协议V2版。它不支持SSH版本V1的向后兼容性,以节省空间和资源,并避免了在SSH版本V1中固有的安全漏洞。Dropbear还提供安全远程复制功能,可以在网络上的主机之间进行远程文件复制。它利用SSH协议来传输数据,和SSH登录采用同样的认证和安全,当需要认证时提示输入
密码。文件名包含一个用户和主机地址,以表明该文件复制的源地址和目标地址。本地文件名可以明确使用绝对或相对路径名来避免处理文件名含有主机说明符。远程主机之间的复制也是可以的。将目标路由器的配置文件复制下来的命令示例如下:
scproot@192.168.6.1:/etc/config/dropbear/tmp/dropbear

9.2.2配置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

配置文件为/etc/config/dropbear,所有的配置在唯一一个配置节dropbear中。表9-2列出了SSH服务器的主要配置选项。


表9-2SSH服务器的主要配置选项
名称类型含义
PasswordAuth布尔值设置为0关闭密码认证。默认为1
RootPasswordAuth布尔值设置为0关闭root用户的密码认证。默认为1
Port数字监听的端口号,默认为22
BannerFile字符串用户认证成功后登录进去的输出内容的文件名
enable布尔值是否随系统启动该进程,默认为1
Interface字符串指定监听的网卡接口,即只从该接口接收请求
示例9-1所示的是dropbear的默认配置,打开了密码认证功能,并且允许管理员用户
登录,设置在TCP端口号22处监听。
示例9-1:
configdropbear
optionPasswordAuth'on'
optionRootPasswordAuth'on'
optionPort'22'
#optionBannerFile'/etc/banner'

9.3 QoS
-----------------------------------------------------------

服务质量(QualityofService,QoS)就是指网络通信过程中,保障用户业务在带宽、时延、抖动和丢包率等方面获得可预期的服务水平。家庭网内部的QoS主要指保证用户实时交互的业务符合用户的要求。

9.3.1 服务模型
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

QoS服务模型是指一组实现端到端服务质量保证的方式,QoS服务模型主要有如下3种。
(1)尽力而为服务模型(Best-Effortservice)。尽力而为服务模型是一个单一的服务模型,也是最简单的服务模型。对尽力而为服务模型,网络尽最大的可能性来发送报文,但对时延、可靠性等性能不提供任何保证。尽力而为服务模型是Linux网络的缺省服务模型,通过先进先出队列来实现。它适用于绝大多数网络应用,如HTTP、FTP和E-Mail等。
(2)综合服务模型(Integratedservice)。综合服务模型,它可以满足多种QoS需求。该模型使用资源预留协议(RSVP),RSVP运行在从源端到目的端的每个设备上,可以监视每个流,以防止其消耗资源过多。这种体系能够明确区分并保证每一个业务流的服务质量,为网络提供最细粒度化的服务质量区分。但是综合服务模型对设备的要求很高,当网络中的数据流数量很大时,设备的存储和处理能力会遇到很大的压力。综合服务模型可扩展性很差,难以在互联网的核心网络实施。它仅适合在专用网络上实施。
(3)区分服务模型(Differentiatedservice)。区分服务模型如图9-2所示,是IETF工作组为了克服综合服务模型的可扩展性差而在1998年提出的另一个服务模型,目的是制定一个可扩展性相对较强的方法来保证IP的服务质量。在区分服务模型中,根据服务要求对不同业务的数据进行分类,对报文按类进行优先级标记,然后有差别地提供服务。
分类器
高优先级队列
中优先级队列
低优先级队列
调度处理
图9-2区分服务模型

OpenWrt采用区分服务模型来提供QoS。区分服务模型是一个多服务模型,它可以满足不同的QoS需求,例如优先保证通过HTTP上网流量,它采用流量分类、流量整形、拥塞管理和拥塞避免机制来进行QoS。流量分类:采用一定的规则识别符合某类特征的报文,它是对网络业务进行区分服务的前提和基础。一般使用Iptables来根据端口和报文特征进行分类。
流量整形:当流量被整形时,其传输速率是受到控制。整形可以大大降低使用的带宽,这样是为了更好的网络效应。它也被用来平滑流量的突发大流量。流量整形发生在出口处。
调度:通过调度数据包的传输,可以在提高流量的交互性的同时,仍然保证大容量传
输的带宽。重新排序也被称为划分优先顺序,并且只发生在出口处。
带宽控制用于QoS时,一般用于保障某一类用户的服务质量,在家庭网内部常用于保障主人的带宽,限制访客的带宽。OpenWrt采用qos-Script来实现QoS,内部使用Iptables和Tc工具来实现QoS。Iptables工具实现数据报文的分类。Tc工具来实现配置Linux内核中优先级队列。Tc工具在iproute2代码包中。Tc的一个关键的概念是QDISC。QDISC是“queueingdiscipline”的缩写,是指报文的排队规则,这是理解流量控制的基础。当内核需要发送一个数据包到一个接口时,它被排入到配置该接口的队列中。紧接着,内核试图从队列获得尽可能多的数据包,把它们交由网络适配器驱动程序来处理。一个最简单的QDISC队列是“PFIFO”,它根本没有特别处理,是一个纯粹的先进先出队列。当网络接口不能瞬间处理完成时,它能存储部分流量。类别(CLASSES):一些排队规则可以包含类,这些类又进一步包含了另外的排队规则——流量可以在任何类内部排队规则。当内核试图取出一个数据包时,就可以来自任何一个类的分类排队规则。排队规则可以在特定类别的队列中优先处理某些特定类型的流量。过滤器用于数据包分类,以确定哪一类数据包将加入队列中。当流量到达带有子类的类时,数据包需要进行分类。各种方法都可以这样做,其中一个是过滤器。附着在类中的所有过滤器被调用,直到其中一个返回一个决定。如果没有判决做出,其他标准可能是可用的。每一个排队规则都是不同的处理。需要注意,过滤器位于排队规则内部,它们不能独立存在。详细内容请参考Tc手册。

9.3.2 QoS配置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

在menuconfig时,选择qos-scripts软件包,在Base-file/Qos-scripts中,源代码目录在package/network/config/qos-scripts下,编译后生成的软件包为qos-scripts。在OpenWrt中至少还有其他两个QoS软件包分别为sqm-scripts和wshaper。不能同时安装两个QoS软件包,因为它们均使用了Tc和iptables,并且按照不同的标准进行报文分类。QoS的UCI配

置文件为/etc/config/qos,如何进行报文分类才能得到好的性能,这取决于应用程序。通常
有两个处理原则。
(1)优先处理小包。例如TCP-ACKs和DNS等。
(2)优先处理用户交互的报文。例如SSH等协议。
QoS-script的默认配置将域名请求和SSH访问作为优先规则。通常域名请求负载非常小,并且用户在上网时的第一步请求动作,用户通常会等待上网请求页面,因此设置为最高优先级。SSH也是同样的原因,用户和服务器之间交互,用户等待服务器的响应。这样将对用户非常友好。QoS配置非常复杂,此处不再讲述。

9.4 uHTTPd服务器
-----------------------------------------------------------

9.4.1概述
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

uHTTPd是OpenWrt/LuCI开发者从零开始编写的Web服务器,目的是成为优秀稳定的、适合嵌入式设备的轻量级任务的HTTP服务器,并且和OpenWrt配置框架非常好地集成在一起。它是管理OpenWrt的默认的Web服务器,还提供了现代Web服务器所有的功能。
uHTTPd支持TSL(SSL)、CGI和Lua,是单线程运行但支持多个实例,例如多个监听端口,每一个都有自己的根目录和其他特性。使用TLS(HTTPS支持)时需要安装
uhttpd-mod-tls模块。和许多其他的Web服务器一样,它也支持在进程内运行Lua,这样可以加速LuaCGI脚本。注意这依赖于Lua,默认情况下没有这样配置。
uHTTPd是OpenWrt的标准HTTP服务器,但是它默认并不会安装在OpenWrt发行版的系统文件中。因为默认的发行版并不包含Web用户管理界面,通常uHTTPd会作为Web接口LuCI的依赖模块自动安装。如果需要单独安装,可以通过以下命令来实现。
#>opkgupdate
#>opkginstalluhttpd

9.4.2配置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

uHTTPd的配置和OpenWrt用户接口系统UCI完全集成在一起。UCI配置文件是/
etc/config/uhttpd。由于uHTTPd直接依赖这文件,因此当UCI设置提交时没有第二个配
置文件需要重新生成。uHTTPd是UCI系统配置的一部分。uHTTPd也提供一个初始化脚本
/etc/init.d/uhttpd来启动或停止服务,或者在系统启动时自动启动。
uHTTPd有两个配置节定义,类型uHTTPd包含了通用的服务器设置,在表9-3中做
了详细介绍。cert部分定义了加密连接SSL证书的默认值,在局域网中一般不使用,因此
不再介绍。
表9-3uHTTPd配置项含义
名称类型含义listen_http字符串定义服务器的IP和端口。指所监听的非加密的地址和端口。如果仅给出端口号,将同时服务于IPv4和IPv6请求。使用0.0.0.0:80仅绑定在IPv4接口,使用[::]:80仅绑定IPv6home目录路径定义服务器的文档根目录max_requests整型数字最大的并行请求数,如果大于这个值,后续的请求将进入排队队列中cert文件路径用于HTTPS连接的ASN.1/DER证书。在提供HTTS连接时必须提供key文件路径用于HTTPS连接的ASN.1/DER私钥。在提供HTTPS连接时必须提供cgi_prefix字符串定义CGI脚本的相对于根目录的前缀。如果没有该选项,CGI功能将不支持script_timeout整型数字Lua或CGI请求的最大等待时间秒值。如果没有输出产生,则超时后执行就结束了network_timeout整型数字网络活动的最大等待时间,如果指定的秒数内没有网络活动发生,则程序终止,连接关闭tcp_keepalive整型数字tcp心跳检测时间间隔,发现对端已不存在时则关闭连接。设置为0则关闭tcp心跳检测realm字符串基本认证的域值,默认为主机名,是当客户端进行基本认证的提示内容config文件路径用于基本认证的配置文件最小配置必须包含文档根目录和HTTP监听端口,示例9-2所示为uHTTPd的一个最小配置。在端口80处监听,默认的主目录为“www”。

示例9-2:
config'uhttpd''main'
option'listen_http''80'
option'home''/www'

9.5 SMTP
-----------------------------------------------------------

SMTP(SimpleMailTransferProtocol)即简单邮件传输协议,它是用于由源地址到目的地址传送邮件的传输协议,由它来控制电子邮件的传输方式。SMTP协议建立在TCP协议之上,它帮助每台计算机在发送或中转信件时找到目的地址。路由器通过SMTP协议所指定的服务器,就可以把电子邮件寄到收信人的服务器上。邮件的内容格式包含邮件消息头和消息体,消息头和消息体之间由一个空行分隔。OpenWrt使用sSMTP软件包来支持邮件发送。sSMTP是一个简单的邮件发送客户端,它不需要一个后台进程,不能接收邮件仅可以发送邮件。通过以下命令进行安装。
opkgupdate
opkginstallssmtp
在安装完成后sSMTP会链接到sendmail,配置文件会安装到以下位置。
/etc/ssmtp/ssmtp.conf
/etc/ssmtp/revaliases
sSMTP并不会默认选择编译,首先将sSMTP软件包从可选仓库中加入到选择列表中。
./scripts/feedsinstallssmtp然后在makenenuconfig时,通过“Mail→ssmtp”进行选择。sSMTP编译脚本位于package/feeds/packages/ssmtp目录下,编译完成后的软件包名称为ssmtp。示例9-3所示的是
一个示例邮件内容(msg.txt),包含收件人和抄送收件人,邮件主题为“HelloOpenWrtroute”,邮件消息头和邮件内容之间有一个空行,最后是邮件正文。


示例9-3:
To:zyz323@163.com
CC:zyz323@sohu.com
Subject:HelloOpenWrtroute
test.HelloOpenwrtbjbook.net.
在发送邮件之前,我们需要配置邮件账户和服务器信息:
echo"mainhub=smtp.163.com">>/etc/ssmtp/ssmtp.conf
echo"rewriteDomain=163.com">>/etc/ssmtp/ssmtp.conf
echo"root:zyz323@163.com:smtp.163.com">>/etc/ssmtp/revaliases
写好邮件之后我们使用命令来发送邮件,发送命令接口格式如下:
ssmtp[flags]目的地址<msg.txt
--t:从消息内容中读取目的接收者。
--v:详细输出程序执行步骤。
--auusername:指定SMTP认证用户名
--appassword:指定SMTP认证密码
--Cfile:不读取默认配置,使用指定配置文件。
发送邮件示例如下,请替换为实际的账号和密码。
#>ssmtp-fusernameauusername@163.com-appassword-szyz323@163.com
-v<msg.txt

9.6 NTP
-----------------------------------------------------------

NTP(NetTimeProtocol)是用于互联网上计算机时间同步的协议。其中有NTP服务器来提供网络时间服务,客户端从服务器获取时间。OpenWrt路由器中内置了一些常用的

NTP时间服务器地址,一旦与因特网连接后,路由器可以自动从时间服务器获取当前时间,然后设置到路由器系统当中。OpenWrt默认支持内置的网络时间服务器,在配置文件/etc/config/system中设置。该选项用来设置NTP时间服务器的IP地址,可以设置多个网络时间服务器。注意:
- 关闭路由器电源后,没有电池的路由器时间信息会丢失,只有再次开机连上因特网后,路由器才会自动获取GMT时间。
- 必须先设置系统时间后,路由器的防火墙的时间限定才能生效。
- 另外可以不采用NTP时间,通过date命令来手动设置系统时间。
在调试时我们可以使用date命令手动设置路由器的时间,然后等待路由器进行时间更新。使用date命令也可以来查询当前时间。date命令如果没有指定选项,则默认输出当前时间。设置时需要传递一个-s选项,后面再以引号传递时间字符串。推荐使用
“YYYY-MM-DDhh:mm:ss”的格式进行时间设置:
date–s'2015-12-2000:00:00'
OpenWrt也支持提供NTP服务器,可以控制配置文件来打开和关闭NTP服务器,系
统重启后生效。也可以通过调用/etc/init.d/sysntpdrestart命令生效。命令设置如下:
ucisetsystem.ntp.enable=1
ucicommitsystem

9.7 PPPoE
-----------------------------------------------------------

PPP在RFC1661中描述,是针对拨号连接的解决方案。PPP是一种分层的协议,物理层用来进行实际的点到点连接。由链路控制层(LCP)发起对链路的建立、配置和测试。在LCP初始化完成后,通过一种或多种网络控制协议来传送特定协议族的通信。PPPoE是指在以太网上进行拨号因特网连接。PPPoE是目前使用最为广泛的广域网协议,因为其具有以下几个特征。
(1)能够控制数据链路的创建。
(2)能够对IP地址进行分配和管理。
(3)采用应用最广泛的以太网介质传输。
(4)能够配置链路并对链路进行质量测试和错误检查。PPPoE也支持身份验证,身份验证选项用于创建链路的发起方输入信息,用于确保发起方发起连接时拥有管理员的许可。

可供选择的验证方式有两种。
(1)PAP(密码验证协议)。以客户端明文方式传递用户名和密码,服务器和本身所存储的密码进行比较验证。
(2)CHAP(握手质询验证协议)。服务器向客户端发送挑战消息,客户端使用密码和挑战消息计算出请求值再次发送给服务器。服务器将请求消息和本地计算出的字符串进行对比,如果符合则身份验证通过,否则拒绝下一步请求。CHAP密码不在网络中明文传输,因此保证了密码不被泄漏。另外使用了不可预知的,
可变随机值来防止回放攻击。

9.7.1 CHAP验证过程
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(1)首先由客户端发起连接请求。
(2)服务器收到连接请求后向客户端发送一个CHAP质询消息。CHAP质询消息包含
以下内容。
-质询分组的类型标识符。
-ID:标识该质询分组的序列号。
-Random=随机数。
-质询方的认证名。
服务器保存随机数和ID以便后续计算认证。
(3)客户端收到质询消息,并进行解析。解析完成后将序列号、随机数和口令连接到
一起并计算MD5值,这是一个单向MD5哈希值,不能从结果计算出原始值,但可以从
MD5值来判断原始值是否正确。这个数值放在请求中当作认证信息发送给服务器。报文

包含以下4部分内容。
-02:CHAP回应分组类型标识符。
-ID:序列号,从质询分组中复制而来。
-Hash字符串,随机值和口令的哈希值。
-设备认证名称。
(4)服务器收到带有认证的连接请求报文后,从序列号找出原始的质询随机数,将序
列号、随机数及口令使用MD5算法计算哈希值。将自己计算的哈希值和客户端请求的哈
希值进行比较,如果一致则认证通过,否则认证失败。认证成功消息包含以下3部分内容。
-03:CHAP认证成功消息类型标识符。
-ID:序列号,是会话的标识,直接从认证请求中复制而来。
-“Welcomein”:文本消息,表示认证通过。
如果认证失败,则发送认证失败消息,主要包含以下内容。
-04:CHAP认证失败消息类型标识符。
-ID:序列号,是会话的标识,直接从认证请求中复制而来。
-“Authenticationfailure”:文本消息,表示认证失败。
CHAP认证过程如图9-3所示。
图9-3CHAP认证过程


9.7.2 PPPoE配置
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

最典型的是用户名和密码,配置文件为/etc/ppp/chap-secrets,由用户名、提供者和密码3部分组成。配置选项在/etc/ppp/options中。在实际配置中使用UCI网络配置文件network,在表8-12中已经进行说明。

9.8无线基础
-----------------------------------------------------------

9.8.1什么是无线
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

无线是使用射频技术,利用无线电波发送与接收数据,无须中断网络即可实现移动办公。IEEE802.11是无线网络的协议标准,计算机之间的无线通信需要共同遵守IEEE802.11规则。共同的协议标准是确保不同厂商生产设备实现互通与兼容的基础,到目前为止,IEEE正式发布的无线网络协议标准共有IEEE802.11、IEEE802.11a、IEEE802.11b、IEEE 802.11g、IEEE802.11ac和IEEE802.11ng等。

9.8.2 优点
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(1)灵活性。在无线网络信号覆盖的任何地方,对于支持无线客户端的设备而言,在获取相应权限的前提下,都可以随时接入此无线网络,这对于有线网络来说是不可能实现的。
(2)成本和安装。无须布置网线,安装简单。
(3)扩展性。无线网络能够应用于多种拓扑结构的网络中。可以通过简便地改变无线
配置,而完成不同的功能。
9.8.3缺点
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(1)性能。无线局域网是依靠无线电波进行传输的,这些电波通过无线发射装置进行发射,而建筑物、车辆、树木和其他障碍物都可能阻碍电磁波的传输,所以会影响网络的性能。
(2)速率。无线信道的传输速率与有线信道相比要低得多。目前,无线局域网的最大传输速率为802.11ac标准的1.3Gbit/s。
(3)安全性。无线电波不要求建立物理的连接通道,再加上无线信号是发散的。所以传输信号很容易被监听到,这样会造成通信内容被泄露。

9.8.4安全
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

无线的安全性必须要慎重考虑,中国推出的无线局域网鉴别和保密基础结构(WAPI)无线网络标准也主要是针对无线局域网的安全性而提出的。具体说来,无线局域网目前所使用的安全机制主要有以下一些。
(1)服务集标示符(ServiceSetIdentifier,SSID)是用于识别无线设备的服务配置标示符,相当于无线接入点(AccessPoint,AP)的名称。它可以提供最低级别的访问控制功能,用户在连接不提供服务集标示符广播功能的无线路由器时,必须要知晓该无线路由器服务集标示符,否则就无法连接。
(2)有线等效保密(WiredEquivalentPrivacy,WEP)协议是无线网络上信息加密的一种标准方法。它一方面用于防止没有正确的有线等效保密密钥的非法用户接入网络,另一方面只允许具有正确的有线等效保密密钥的用户对数据进行加密和解密。
(3)无线保护接入(Wi-FiProtectedAccess,WPA)是有线等效保密协议的替代方案,它是由IEEE802.11i安全规范派生而来,并与其兼容。它可以保护IEEE802.11的所有版本,而且其安全性比目前广泛采用的有线等效保密技术更好。

9.8.5认识OpenWrt无线接口
~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~~

(1)无线接口操作工具(iwconfig)。
ath0IEEE802.11acESSID:"WIRELESS_0001"
Mode:MasterFrequency:5.745GHzAccessPoint:18:9D:54:10:10:04
BitRate:1.3Gb/sTx-Power=23dBm


RTSthr:offFragmentthr:off
Encryptionkey:off
PowerManagement:off
LinkQuality=0/94Signallevel=-95dBmNoiselevel=-95dBm
Rxinvalidnwid:107Rxinvalidcrypt:0Rxinvalidfrag:0
Txexcessiveretries:0Invalidmisc:0Missedbeacon:0
ath1IEEE802.11ngESSID:"WIRELESS_0002"
Mode:MasterFrequency:2.412GHzAccessPoint:18:9D:54:10:10:01
BitRate:216.7Mb/sTx-Power=20dBm
RTSthr:offFragmentthr:off
Encryptionkey:off
PowerManagement:off
LinkQuality=94/94Signallevel=-96dBmNoiselevel=-95dBm
Rxinvalidnwid:1071Rxinvalidcrypt:0Rxinvalidfrag:0
Txexcessiveretries:0Invalidmisc:0Missedbeacon:0
(2)无线接口分析。
两个无线接口:ath0和ath1
IEEE802.11ac:使用的MAC层协议,802.11ng为2.4G,802.11ac为5G
ESSID:接口广播的SSID名称
Mode:工作模式,Master\mixed
Frequency:无线接口工作的频率
AccessPoint:无线接口的MAC地址
BitRate:比特率,单位为Mbit/s
Tx-Power:发射功率
RTSthr:用来解决数据冲突的RTS阀值
Fragmentthr:数据帧分片阀值
Encryptionkey:无线密码
PowerManagement:电源管理开关
LinkQuality/Signallevel/Noiselevel:链路质量、信号级别、噪声级别
9.8无线基础191
9.8.6OpenWrt无线配置
(1)配置文件名称:/etc/config/wireless。
(2)配置文件内容如下所示。
configwifi-device'wifi0'
optionmacaddr'18:9D:54:10:10:01'
optiontxpower'20'
optioncountry'CN'
optionhwmode'11g'
optionchannel'auto'
configwifi-iface
optiondevice'wifi0'
optionnetwork'lan'
optionmode'ap'
optionssid'WIRELESS_0002'
optionkey'11111111'
optionencryption'psk2'
configwifi-device'wifi1'
optionmacaddr'18:9D:54:10:10:04'
optionhwmode'11ac'
optiontxpower'21'
optioncountry'CN'
optionhtmode'HT20'
optionchannel'149'
configwifi-iface
optiondevice'wifi1'
optionnetwork'lan'
optionmode'ap'
optionssid'WIRELESS_0001'
optionencryption'none+'
(3)配置文件分析。见表9-4。

表9-4无线网络参数解析
名称类型含义
wifi-device字符串无线网络物理设备名称
macaddr字符串无线网络物理设备的MAC地址
txpower字符串设备发射功率,和iwconfig看到的接口发射功率对应
country字符串国家编码
hwmode字符串设备工作模式,11g代表2.4G,11ac代表5G,和iwconfig看到的
接口工作模式对应
channel字符串设备工作信道,自动或者1-14(2.4G)
device字符串三层接口和物理接口绑定设置
network字符串网络层工作方式,例如:"lan"
mode字符串接口工作模式,例如:"station""ap"
ssid字符串无线网络标识符
key字符串无线网络密码
encryption字符串无线加密方式,例如:"psk2""wpa-psk"
(4)配置设置。OpenWrt配置使用系统UCI工具进行设置。
例如,设置无线信道时:
ucisetwireless.wifi0.channel='auto'
将无线配置写入配置文件:
ucicommit
